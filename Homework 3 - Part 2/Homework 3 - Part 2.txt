Problem 1:

	A	B	C	D	E	F
	H	C	C	H	C	C
	
	1. Filtering:
		P(X3 = A | Hot1, Cold2, Cold3) = P(Cold3 | X3 = A) = 0.0 (Rover cannot be at A on X3 since it indicates that it is cold on X3)
		P(X3 = B | Hot1, Cold2, Cold3) = P(X2 = B | Cold2) = 1.00 so P(X3 = B | Cold3) = 0.2 since the rover has a 0.2 chance to not move
		P(X3 = C | Hot1, Cold2, Cold3) = 1.0 - 0.2 = 0.8 since we know that the rover has to be in either B or C and there is a 0.2 chance it is in B
		P(X3 = D | Hot1, Cold2, Cold3) = 0.0 (Rover starts at A. Therefore it is not possible for it to move 4 locations in 3 days)
		P(X3 = E | Hot1, Cold2, Cold3) = 0.0 (Rover starts at A. Therefore it is not possible for it to move 5 locations in 3 days)
		P(X3 = F | Hot1, Cold2, Cold3) = 0.0 (Rover starts at A. Therefore it is not possible for it to move 6 locations in 3 days)
		
	2. Smoothing:
		Given that it is only day 2 and the rover can only move one location per day P(X2) for X2 = C...F is 0.0
		From previous part:
			P(X2 = A | Cold2) = 0.0 since it cannot be cold in A
			P(X2 = B | Cold2) = 1.0
	
	3. Prediction:
		P(Hot4 | Hot1,Cold2,Cold3) = P(X4 = D | Hot1,Cold2,Cold3)
		P(Hot4 | Hot1,Cold2,Cold3) = 0.8 * P(X3 = C | Hot1,Cold2,Cold3)
		P(Hot4 | Hot1,Cold2,Cold3) = 0.8 * 0.8 (From part 1) = 0.64
	
	4. Prediction:
		P(X4 = A| Hot1,Cold2,Cold3) = 0.0 (Rover cannot move left and clearly moves right at least once to get Cold2)
		P(X4 = B| Hot1,Cold2,Cold3) = 0.2 * P(X3 = B | Hot1,Cold2,Cold3) = 0.2 * 0.2 (from part 1) = 0.04
		P(X4 = C| Hot1,Cold2,Cold3) = (0.8 * P(X3 = B| Hot1,Cold2,Cold3)) + (0.2 * P(X3 = C|Hot1,Cold2,Cold3)) = (0.8 * 0.2 (from part 1)) + (0.2 * 0.8 (from part 1)) = 0.32
		P(X4 = D| Hot1,Cold2,Cold3) = 0.8 * P(X3 = C| Hot1,Cold2,Cold3) = 0.8 * 0.8 (from part 1) = 0.64
		P(X4 = E| Hot1,Cold2,Cold3) = 0.0 (Rover cannot move 5 times in 4 days)
		P(X4 = F| Hot1,Cold2,Cold3) = 0.0 (Rover cannot move 6 times in 4 days)
	
	5. Bonus
		P(Hot4,Hot5,Cold6|Hot1,Cold2,Cold3) = 

Problem 2:
	
		s	a 	s' 	T(s,a,s')		s	a	R(s,a)
		A	1	A 	1				A	1	0
		A 	1	B	0				A	2	-1
		A	2	A 	0.5
		A 	2	B	0.5
		
		s	a 	s' 	T(s,a,s')		s	a	R(s,a)
		B 	1 	A 	0				B 	1  	5
		B 	1 	B 	1				B 	2	0
		B 	2 	A 	0
		B 	2 	B 	1
	1.
		V(s) = R(s,a) + Sum(T(s,a,s') * V(s'))
	
	2.
		pi(A)=1 and pi(B)=1
		State	V0	V1	V2
		A		0	0	0
		B		0	5	10
		
		for a=1, if s=A then s'=A and if s=B then s'=B
	3.
		Improved policy would be pi(A)=2 and pi(B)=1
		State	V0	V1		V2
		A		0	-1		1
		B		0	5		10